networks:
  dev:


services:
  fastapi:
    build: ./api
    ports:
      - 8080:8080
    environment:
      - SERVER_ADDRESS=0.0.0.0:8080
      - POSTGRES_CONN=postgres://postgres:12345@pgdb:5432/postgres
      - RANDOM_SECRET=123456
    networks:
      - dev
    depends_on:
      pgdb:
        condition: service_healthy
        restart: true
      redisdb:
        condition: service_started
    develop:
      watch:
        - action: rebuild
          path: ./api
          target: /usr/src/app/api
          ignore:
            - __pycache__/

  pgdb:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=12345
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=trust
    networks:
      - dev
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      retries: 5
      start_period: 5s
      timeout: 5s

  redisdb:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - dev

  antifraud:
    image: lodthe/prod-backend-antifraud:latest
    ports:
      - 9090:9090
    environment:
      - CACHE_DURATION_MS=5000
      - SERVER_PORT=9090
    networks:
      - dev
